dev.off()
pdf("histogram_4e-1.pdf")
q4$hist.nr
dev.off()
qec <- Analysis(ProblemTickets(4), samp.size = 8, iter = 100000, problem = 4)
qec2 <- Analysis(ProblemTickets(4), samp.size = 10, iter = 100000, problem = 4)
pdf("histogram_ec_wr.pdf")
grid.arrange(q4$hist.wr + labs(title = "Sampling With Replacement"), qec$hist.wr, qec2$hist.wr)
dev.off()
pdf("histogram_ec_nr.pdf")
grid.arrange(q4$hist.nr + labs(title = "Sampling Without Replacement"), qec$hist.nr, qec2$hist.nr)
dev.off()
Analysis <- function(tickets, samp.size = 6, iter = 100000, problem) {
# All the analysis for problems 1-4 wrapped up in a function
# Arguments:
#   tickets - a vector of ticket values
#   samp.size - sample size, defaults to 6
#   iter - number of iterations for the simulation
# Returns:
#   mean.wr and mean.nr - expected value of sample mean
#   se.wr and se.nr - standard error of sample mean
#   hist.wr and hist.nr - histogram of the sample means
#   prob.wr and prob.nr - probability table as specified in the assignment
# Example usage:
#   q <- Analysis(c(0,0,0,1,1), samp.size = 10)
#   q$mean.wr
#   q$se.nr
# With replacement
mean.wr <- mean(tickets)
se.wr <- StandardError(tickets, samp.size , replace = TRUE)
sample.wr <- SampleFromBox(x = tickets, size = samp.size ,
replace = TRUE, iter = iter)
if(problem %in% c(1)){
hist.wr <- data.frame(Mean = sample.wr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = .15, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.wr, sd=se.wr))
} else  if(problem %in% c(2)){
hist.wr <- data.frame(Mean = sample.wr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = .1, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.wr, sd=se.wr))
} else if (problem %in% c(3)) {
hist.wr <- data.frame(Mean = sample.wr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = .5, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.wr, sd=se.wr))
} else if (problem %in% c(4)) {
hist.wr <- data.frame(Mean = sample.wr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = 0.6, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.wr, sd=se.wr))
}
# Table for with replacement
prob.wr <- data.frame(z = c(-4:-1, 1:4))
# Does the exact probabilities if tickets are distributed
# as Bernoulli
if(sum(!duplicated(tickets)) == 2) {
one.count <- sum(tickets == 1) # Number of 1's
zero.count <- sum(tickets == 0) # Number of 0's
prob1 <- one.count/(one.count + zero.count)
tmp1 <- ExactProb(1:4, mean = mean.wr, se = se.wr,
cdf = pbinom, sample.size = samp.size,
size = samp.size , prob = prob1, lower.tail = FALSE)
tmp2 <- ExactProb(-4:-1, mean = mean.wr, se = se.wr,
cdf = pbinom, sample.size = samp.size,
size = samp.size , prob = prob1, lower.tail = TRUE)
prob.wr <- mutate(prob.wr, Exact = c(tmp2, tmp1))
}
# Empirical estimates from simulation
tmp3 <- EmpiricalProbEst(1:4, sample = sample.wr,
mean = mean.wr, se = se.wr, lower.tail = FALSE)
tmp4 <- EmpiricalProbEst(-4:-1, sample = sample.wr,
mean = mean.wr, se = se.wr, lower.tail = TRUE)
# Normal approximation
tmp5 <- NormalProbEst(1:4, mean = mean.wr, se = se.wr,
n = samp.size , lower.tail = FALSE)
tmp6 <- NormalProbEst(-4:-1, mean = mean.wr, se = se.wr,
n = samp.size, lower.tail = TRUE)
# Put everything into a nice data frame
prob.wr <- mutate(prob.wr,
EmpiricalEst = c(tmp4, tmp3),
NormalApprox = c(tmp6, tmp5)) %>%
round(4)
# No replacement
mean.nr <- mean(tickets)
se.nr <- StandardError(tickets, samp.size , replace = FALSE)
sample.nr <- SampleFromBox(x = tickets, size = samp.size,
replace = FALSE, iter = iter)
if(problem %in% c(1)) {
hist.nr <- data.frame(Mean = sample.nr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = .15, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.nr, sd=se.nr))
} else if(problem %in% c(2)) {
hist.nr <- data.frame(Mean = sample.nr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = .1, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.nr, sd=se.nr))
} else if(problem %in% c(3)) {
hist.nr <- data.frame(Mean = sample.nr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = .5, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.nr, sd=se.nr)) +
scale_x_continuous(limits = c(0,13))
} else if(problem %in% c(4)) {
hist.nr <- data.frame(Mean = sample.nr) %>%
ggplot(aes(x=Mean)) + geom_histogram(aes( y=..density..),
binwidth = 0.3, col = "white") +
stat_function(data=data.frame(x=c(0,1)), aes(x=x),
fun=dnorm, arg=list(mean=mean.nr, sd=se.nr))
}
# Table for without replacement
prob.nr <- data.frame(z = c(-4:-1, 1:4))
# Does the exact probabilities if tickets are distributed
# as Bernoulli
if(sum(!duplicated(tickets)) == 2) {
tmp1 <- ExactProb(1:4, mean = mean.nr, se = se.nr,
cdf = phyper, sample.size = samp.size,
m = one.count, n = zero.count,
k = samp.size, lower.tail = FALSE)
tmp2 <- ExactProb(-4:-1, mean = mean.nr, se = se.nr,
cdf = phyper, sample.size = samp.size ,
m = one.count, n = zero.count,
k = samp.size , lower.tail = TRUE)
prob.nr <- mutate(prob.nr, Exact = c(tmp2, tmp1))
}
# Empirical estimates from simulation without replacement
tmp3 <- EmpiricalProbEst(1:4, sample = sample.nr, mean = mean.nr,
se = se.nr, lower.tail = FALSE)
tmp4 <- EmpiricalProbEst(-4:-1, sample = sample.nr,
mean = mean.nr, se = se.nr, lower.tail = TRUE)
# Normal approximation
tmp5 <- NormalProbEst(1:4, mean = mean.nr, se = se.nr,
n = samp.size , lower.tail = FALSE)
tmp6 <- NormalProbEst(-4:-1, mean = mean.nr, se = se.nr,
n = samp.size, lower.tail = TRUE)
prob.nr <- mutate(prob.nr,
EmpiricalEst = c(tmp4, tmp3),
NormalApprox = c(tmp6, tmp5)) %>%
round(4)
return(list(mean.wr = mean.wr,
mean.nr = mean.nr,
se.wr = se.wr,
se.nr = se.nr,
prob.wr = prob.wr,
prob.nr = prob.nr,
hist.wr = hist.wr,
hist.nr = hist.nr))
}
q4 <- Analysis(ProblemTickets(4), samp.size = 6, iter = 100000, problem = 4)
pdf("histogram_4c-1.pdf")
q4$hist.wr
dev.off()
pdf("histogram_4e-1.pdf")
q4$hist.nr
dev.off()
qec <- Analysis(ProblemTickets(4), samp.size = 8, iter = 100000, problem = 4)
qec2 <- Analysis(ProblemTickets(4), samp.size = 10, iter = 100000, problem = 4)
pdf("histogram_ec_wr.pdf")
grid.arrange(q4$hist.wr + labs(title = "Sampling With Replacement"), qec$hist.wr, qec2$hist.wr)
dev.off()
pdf("histogram_ec_nr.pdf")
grid.arrange(q4$hist.nr + labs(title = "Sampling Without Replacement"), qec$hist.nr, qec2$hist.nr)
dev.off()
sample <- runif(1000,2,4)
theta <- 2
sample <- runif(1000,theta,2*theta)
mle <- c()
est <- c()
for(i in 1:1000){
sample <- runif(1000,theta,2*theta)
mle[i] <- max(sample)/2
est[i] <- (min(sample) + max(sample))/3
}
est.df <- data.frame(mle = mle, est = est)
ggplot(
est.df <- data.frame(est = c(mle,est), type = c(rep("mle",1000),rep("est",1000)))
est.df <- data.frame(est = c(mle,est), type = c(rep("mle",1000),rep("est",1000)))
est.df <- data.frame(est = c(mle,est), type = factor(c(rep("mle",1000),rep("est",1000))))
ggplot(est.df) + geom_histogram(aes(x = est)) + facet_wrap(type~.)
ggplot(est.df) + geom_histogram(aes(x = est, col = type))
ggplot(est.df) + geom_histogram(aes(x = est, fill = type))
est.df <- data.frame(mle = mle, est = est)
gg.mle <- ggplot(est.df) + geom_histogram(aes(x = mle))
gg.mle <- ggplot(est.df) + geom_histogram(aes(x = mle))
gg.est <- ggplot(est.df) + geom_histogram(aes(x = est))
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) + geom_histogram(aes(x = mle), col = "white")
gg.est <- ggplot(est.df) + geom_histogram(aes(x = est), col = "white")
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) + geom_histogram(aes(x = mle), col = "white", binwidth = 0.002)
gg.est <- ggplot(est.df) + geom_histogram(aes(x = est), col = "white", binwidth = 0.002)
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) + geom_histogram(aes(x = mle), col = "white", binwidth = 0.0002)
gg.est <- ggplot(est.df) + geom_histogram(aes(x = est), col = "white", binwidth = 0.0002)
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) + geom_histogram(aes(x = mle), col = "white", binwidth = 0.0005)
gg.est <- ggplot(est.df) + geom_histogram(aes(x = est), col = "white", binwidth = 0.0005)
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle), col = "white", binwidth = 0.0005) +
scale_x_continuous(limits = c(1.9920,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est), col = "white", binwidth = 0.0005) +
scale_x_continuous(limits = c(1.9920,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0005) +
scale_x_continuous(limits = c(1.9920,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0005) +
scale_x_continuous(limits = c(1.9920,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0006) +
scale_x_continuous(limits = c(1.9920,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0006) +
scale_x_continuous(limits = c(1.9920,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.9920,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.9920,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
mean(mle)
mean(est)
mse.mle <- (2 - mean(mle))^2 + var(mle)
mse.est <- (2 - mean(est))^2 + var(est)
mse.mle
mse.est
mle <- c()
est <- c()
mse.mle - mse.est
mse.mle
mse.est
mse.mle/mle.est
mse.mle/mse.est
# let's simulate for theta = 2
theta <- 2
mle <- c()
est <- c()
# do 1000 simulations
for(i in 1:1000){
# draw a sample of size 1000 from the uniform(theta, 2theta) distribution
sample <- runif(100,theta,2*theta)
# calculate the MLE estimate
mle[i] <- max(sample)/2
# calculate the theta.hat estimate from (4)
est[i] <- (min(sample) + max(sample))/3
}
# put results into a data frame
est.df <- data.frame(mle = mle, est = est)
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.9920,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.9920,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
# let's simulate for theta = 2
theta <- 2
mle <- c()
est <- c()
# do 1000 simulations
for(i in 1:1000){
# draw a sample of size 1000 from the uniform(theta, 2theta) distribution
sample <- runif(500,theta,2*theta)
# calculate the MLE estimate
mle[i] <- max(sample)/2
# calculate the theta.hat estimate from (4)
est[i] <- (min(sample) + max(sample))/3
}
# put results into a data frame
est.df <- data.frame(mle = mle, est = est)
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.9920,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.9920,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
library(ggplot2)
library(gridExtra)
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.99,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.99,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
# put results into a data frame
est.df <- data.frame(mle = mle, est = est)
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.98,2.0050))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.98,2.0050))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.985,2.0055))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.985,2.0055))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
2-1.985
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
set.seed(123)
library(ggplot2)
library(gridExtra)
# let's simulate for theta = 2
theta <- 2
mle <- c()
est <- c()
# do 1000 simulations
for(i in 1:1000){
# draw a sample of size 500 from the uniform(theta, 2theta) distribution
sample <- runif(500,theta,2*theta)
# calculate the MLE estimate
mle[i] <- max(sample)/2
# calculate the theta.hat estimate from (4)
est[i] <- (min(sample) + max(sample))/3
}
# put results into a data frame
est.df <- data.frame(mle = mle, est = est)
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0007) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.001) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.001) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
ata frame
est.df <- data.frame(mle = mle, est = est)
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.08) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.08) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
est.df <- data.frame(mle = mle, est = est)
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.08) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.08) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.001) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.001) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.005) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.005) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.002) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.002) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.001) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.001) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
# plot histograms
gg.mle <- ggplot(est.df) +
geom_histogram(aes(x = mle, y = ..density..), col = "white", binwidth = 0.0015) +
scale_x_continuous(limits = c(1.985,2.015))
gg.est <- ggplot(est.df) +
geom_histogram(aes(x = est, y = ..density..), col = "white", binwidth = 0.0015) +
scale_x_continuous(limits = c(1.985,2.015))
grid.arrange(gg.mle,gg.est,ncol = 2)
# calculate the MSE for the MLE
mse.mle <- (2 - mean(mle))^2 + var(mle)
# calcualte the MSE for the estimate from (4)
mse.est <- (2 - mean(est))^2 + var(est)
# estimate from (4) has MSE 2.3 times as large as the MLE!
mse.mle/mse.est
